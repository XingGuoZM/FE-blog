{
  "dependencies": [
    {
      "weak": false,
      "optional": false,
      "_locSL": 1,
      "_locSC": 107,
      "_locEL": 1,
      "_locEC": 121,
      "_loc": {
        "start": {
          "line": 1,
          "column": 107
        },
        "end": {
          "line": 1,
          "column": 121
        }
      },
      "range": [
        107,
        121
      ],
      "base": "module.exports",
      "names": [],
      "call": false
    }
  ],
  "blocks": [],
  "type": "javascript/auto",
  "context": "/Users/lzm/blog/前端工程化/webpack-demo-plugin/node_modules/html-webpack-plugin",
  "layer": null,
  "needId": true,
  "debugId": 1002,
  "resolveOptions": {},
  "useSourceMap": false,
  "useSimpleSourceMap": false,
  "buildMeta": {},
  "buildInfo": {
    "cacheable": true,
    "parsed": true,
    "buildDependencies": {
      "_set": {},
      "_toMerge": {},
      "_toDeepMerge": [],
      "_needMerge": false,
      "_deopt": false
    },
    "valueDependencies": {},
    "hash": "b30e86bb6e5e6b1c6d21d21e62feb9f2",
    "topLevelDeclarations": {},
    "snapshot": {
      "_flags": 3,
      "startTime": 1634612787320,
      "fileTimestamps": {}
    }
  },
  "presentationalDependencies": [
    {
      "weak": false,
      "optional": false,
      "_locSL": 1,
      "_locSC": 8,
      "_locEL": 1,
      "_locEC": 31,
      "_loc": {
        "start": {
          "line": 1,
          "column": 8
        },
        "end": {
          "line": 1,
          "column": 31
        }
      },
      "expression": "require",
      "range": [
        8,
        31
      ],
      "runtimeRequirements": null
    }
  ],
  "request": "/Users/lzm/blog/前端工程化/webpack-demo-plugin/node_modules/html-webpack-plugin/lib/loader.js!/Users/lzm/blog/前端工程化/webpack-demo-plugin/node_modules/html-webpack-plugin/default_index.ejs",
  "userRequest": "/Users/lzm/blog/前端工程化/webpack-demo-plugin/node_modules/html-webpack-plugin/lib/loader.js!/Users/lzm/blog/前端工程化/webpack-demo-plugin/node_modules/html-webpack-plugin/default_index.ejs",
  "rawRequest": "/Users/lzm/blog/前端工程化/webpack-demo-plugin/node_modules/html-webpack-plugin/lib/loader.js!/Users/lzm/blog/前端工程化/webpack-demo-plugin/node_modules/html-webpack-plugin/default_index.ejs",
  "binary": false,
  "parser": {
    "hooks": {
      "evaluateTypeof": {
        "_map": {},
        "_interceptors": []
      },
      "evaluate": {
        "_map": {},
        "_interceptors": []
      },
      "evaluateIdentifier": {
        "_map": {},
        "_interceptors": []
      },
      "evaluateDefinedIdentifier": {
        "_map": {},
        "_interceptors": []
      },
      "evaluateCallExpressionMember": {
        "_map": {},
        "_interceptors": []
      },
      "isPure": {
        "_map": {},
        "_interceptors": []
      },
      "preStatement": {
        "_args": [
          "statement"
        ],
        "taps": [
          {
            "type": "sync",
            "name": "CompatibilityPlugin"
          }
        ],
        "interceptors": [],
        "_x": [
          null
        ]
      },
      "blockPreStatement": {
        "_args": [
          "declaration"
        ],
        "taps": [],
        "interceptors": [],
        "_x": []
      },
      "statement": {
        "_args": [
          "statement"
        ],
        "taps": [],
        "interceptors": [],
        "_x": []
      },
      "statementIf": {
        "_args": [
          "statement"
        ],
        "taps": [
          {
            "type": "sync",
            "name": "ConstPlugin"
          }
        ],
        "interceptors": []
      },
      "classExtendsExpression": {
        "_args": [
          "expression",
          "classDefinition"
        ],
        "taps": [],
        "interceptors": []
      },
      "classBodyElement": {
        "_args": [
          "element",
          "classDefinition"
        ],
        "taps": [],
        "interceptors": []
      },
      "classBodyValue": {
        "_args": [
          "expression",
          "element",
          "classDefinition"
        ],
        "taps": [],
        "interceptors": []
      },
      "label": {
        "_map": {},
        "_interceptors": []
      },
      "import": {
        "_args": [
          "statement",
          "source"
        ],
        "taps": [
          {
            "type": "sync",
            "name": "HarmonyImportDependencyParserPlugin"
          }
        ],
        "interceptors": []
      },
      "importSpecifier": {
        "_args": [
          "statement",
          "source",
          "exportName",
          "identifierName"
        ],
        "taps": [
          {
            "type": "sync",
            "name": "HarmonyImportDependencyParserPlugin"
          }
        ],
        "interceptors": []
      },
      "export": {
        "_args": [
          "statement"
        ],
        "taps": [
          {
            "type": "sync",
            "name": "HarmonyExportDependencyParserPlugin"
          }
        ],
        "interceptors": []
      },
      "exportImport": {
        "_args": [
          "statement",
          "source"
        ],
        "taps": [
          {
            "type": "sync",
            "name": "HarmonyExportDependencyParserPlugin"
          }
        ],
        "interceptors": []
      },
      "exportDeclaration": {
        "_args": [
          "statement",
          "declaration"
        ],
        "taps": [],
        "interceptors": []
      },
      "exportExpression": {
        "_args": [
          "statement",
          "declaration"
        ],
        "taps": [
          {
            "type": "sync",
            "name": "HarmonyExportDependencyParserPlugin"
          }
        ],
        "interceptors": []
      },
      "exportSpecifier": {
        "_args": [
          "statement",
          "identifierName",
          "exportName",
          "index"
        ],
        "taps": [
          {
            "type": "sync",
            "name": "HarmonyExportDependencyParserPlugin"
          }
        ],
        "interceptors": []
      },
      "exportImportSpecifier": {
        "_args": [
          "statement",
          "source",
          "identifierName",
          "exportName",
          "index"
        ],
        "taps": [
          {
            "type": "sync",
            "name": "HarmonyExportDependencyParserPlugin"
          }
        ],
        "interceptors": []
      },
      "preDeclarator": {
        "_args": [
          "declarator",
          "statement"
        ],
        "taps": [],
        "interceptors": [],
        "_x": []
      },
      "declarator": {
        "_args": [
          "declarator",
          "statement"
        ],
        "taps": [],
        "interceptors": [],
        "_x": []
      },
      "varDeclaration": {
        "_map": {},
        "_interceptors": []
      },
      "varDeclarationLet": {
        "_map": {},
        "_interceptors": []
      },
      "varDeclarationConst": {
        "_map": {},
        "_interceptors": []
      },
      "varDeclarationVar": {
        "_map": {},
        "_interceptors": []
      },
      "pattern": {
        "_map": {},
        "_interceptors": []
      },
      "canRename": {
        "_map": {},
        "_interceptors": []
      },
      "rename": {
        "_map": {},
        "_interceptors": []
      },
      "assign": {
        "_map": {},
        "_interceptors": []
      },
      "assignMemberChain": {
        "_map": {},
        "_interceptors": []
      },
      "typeof": {
        "_map": {},
        "_interceptors": []
      },
      "importCall": {
        "_args": [
          "expression"
        ],
        "taps": [
          {
            "type": "sync",
            "name": "ImportParserPlugin"
          }
        ],
        "interceptors": []
      },
      "topLevelAwait": {
        "_args": [
          "expression"
        ],
        "taps": [
          {
            "type": "sync",
            "name": "HarmonyDetectionParserPlugin"
          }
        ],
        "interceptors": []
      },
      "call": {
        "_map": {},
        "_interceptors": []
      },
      "callMemberChain": {
        "_map": {},
        "_interceptors": []
      },
      "memberChainOfCallMemberChain": {
        "_map": {},
        "_interceptors": []
      },
      "callMemberChainOfCallMemberChain": {
        "_map": {},
        "_interceptors": []
      },
      "optionalChaining": {
        "_args": [
          "optionalChaining"
        ],
        "taps": [
          {
            "type": "sync",
            "name": "ConstPlugin"
          }
        ],
        "interceptors": []
      },
      "new": {
        "_map": {},
        "_interceptors": []
      },
      "expression": {
        "_map": {},
        "_interceptors": []
      },
      "expressionMemberChain": {
        "_map": {},
        "_interceptors": []
      },
      "unhandledExpressionMemberChain": {
        "_map": {},
        "_interceptors": []
      },
      "expressionConditionalOperator": {
        "_args": [
          "expression"
        ],
        "taps": [
          {
            "type": "sync",
            "name": "ConstPlugin"
          }
        ],
        "interceptors": [],
        "_x": [
          null
        ]
      },
      "expressionLogicalOperator": {
        "_args": [
          "expression"
        ],
        "taps": [
          {
            "type": "sync",
            "name": "ConstPlugin"
          }
        ],
        "interceptors": []
      },
      "program": {
        "_args": [
          "ast",
          "comments"
        ],
        "taps": [
          {
            "type": "sync",
            "name": "HarmonyDetectionParserPlugin"
          },
          {
            "type": "sync",
            "name": "UseStrictPlugin"
          },
          {
            "type": "sync",
            "name": "DefinePlugin"
          }
        ],
        "interceptors": [],
        "_x": [
          null,
          null,
          null
        ]
      },
      "finish": {
        "_args": [
          "ast",
          "comments"
        ],
        "taps": [
          {
            "type": "sync",
            "name": "JavascriptParser"
          },
          {
            "type": "sync",
            "name": "JavascriptParser"
          },
          {
            "type": "sync",
            "name": "JavascriptParser"
          },
          {
            "type": "sync",
            "name": "JavascriptMetaInfoPlugin"
          }
        ],
        "interceptors": [],
        "_x": [
          null,
          null,
          null,
          null
        ]
      }
    },
    "sourceType": "auto"
  },
  "generator": {},
  "resource": "/Users/lzm/blog/前端工程化/webpack-demo-plugin/node_modules/html-webpack-plugin/default_index.ejs",
  "resourceResolveData": {
    "_ResolverCachePluginCacheMiss": true,
    "context": {
      "issuer": "",
      "issuerLayer": null,
      "compiler": "HtmlWebpackCompiler"
    },
    "path": "/Users/lzm/blog/前端工程化/webpack-demo-plugin/node_modules/html-webpack-plugin/default_index.ejs",
    "query": "",
    "fragment": "",
    "module": false,
    "directory": false,
    "file": false,
    "internal": false,
    "fullySpecified": false,
    "descriptionFilePath": "/Users/lzm/blog/前端工程化/webpack-demo-plugin/node_modules/html-webpack-plugin/package.json",
    "descriptionFileData": {
      "_from": "html-webpack-plugin",
      "_id": "html-webpack-plugin@5.3.2",
      "_inBundle": false,
      "_integrity": "sha512-HvB33boVNCz2lTyBsSiMffsJ+m0YLIQ+pskblXgN9fnjS1BgEcuAfdInfXfGrkdXV406k9FiDi86eVCDBgJOyQ==",
      "_location": "/html-webpack-plugin",
      "_phantomChildren": {},
      "_requested": {
        "type": "tag",
        "registry": true,
        "raw": "html-webpack-plugin",
        "name": "html-webpack-plugin",
        "escapedName": "html-webpack-plugin",
        "rawSpec": "",
        "saveSpec": null,
        "fetchSpec": "latest"
      },
      "_requiredBy": [
        "#DEV:/",
        "#USER"
      ],
      "_resolved": "https://registry.npmjs.org/html-webpack-plugin/-/html-webpack-plugin-5.3.2.tgz",
      "_shasum": "7b04bf80b1f6fe84a6d3f66c8b79d64739321b08",
      "_spec": "html-webpack-plugin",
      "_where": "/Users/lzm/blog/前端工程化/webpack-demo-plugin",
      "author": {
        "name": "Jan Nicklas",
        "email": "j.nicklas@me.com",
        "url": "https://github.com/jantimon"
      },
      "bugs": {
        "url": "https://github.com/jantimon/html-webpack-plugin/issues"
      },
      "bundleDependencies": false,
      "config": {
        "commitizen": {
          "path": "./node_modules/cz-conventional-changelog"
        }
      },
      "dependencies": {
        "@types/html-minifier-terser": "^5.0.0",
        "html-minifier-terser": "^5.0.1",
        "lodash": "^4.17.21",
        "pretty-error": "^3.0.4",
        "tapable": "^2.0.0"
      },
      "deprecated": false,
      "description": "Simplifies creation of HTML files to serve your webpack bundles",
      "devDependencies": {
        "@types/node": "11.13.9",
        "commitizen": "^4.2.4",
        "css-loader": "5.0.1",
        "cz-conventional-changelog": "2.1.0",
        "dir-compare": "1.7.2",
        "html-loader": "2.1.1",
        "jest": "26.5.3",
        "mini-css-extract-plugin": "^1.6.0",
        "pug": "3.0.2",
        "pug-loader": "2.4.0",
        "raw-loader": "4.0.2",
        "rimraf": "2.6.3",
        "semistandard": "^13.0.1",
        "standard-version": "^9.3.0",
        "style-loader": "2.0.0",
        "typescript": "4.1.3",
        "webpack": "5.24.3",
        "webpack-cli": "4.5.0",
        "webpack-recompilation-simulator": "3.2.0"
      },
      "engines": {
        "node": ">=10.13.0"
      },
      "files": [
        "lib/",
        "index.js",
        "default_index.ejs",
        "typings.d.ts"
      ],
      "funding": {
        "type": "opencollective",
        "url": "https://opencollective.com/html-webpack-plugin"
      },
      "homepage": "https://github.com/jantimon/html-webpack-plugin",
      "jest": {
        "watchPathIgnorePatterns": [
          "<rootDir>/dist"
        ],
        "testEnvironment": "node"
      },
      "keywords": [
        "webpack",
        "plugin",
        "html",
        "html-webpack-plugin"
      ],
      "license": "MIT",
      "main": "index.js",
      "name": "html-webpack-plugin",
      "peerDependencies": {
        "webpack": "^5.20.0"
      },
      "repository": {
        "type": "git",
        "url": "git+https://github.com/jantimon/html-webpack-plugin.git"
      },
      "scripts": {
        "build-examples": "node examples/build-examples.js",
        "commit": "git-cz",
        "posttest": "tsc",
        "pretest": "semistandard",
        "puml": "npx puml generate flow.puml -o flow.png",
        "release": "standard-version",
        "test": "jest --runInBand --verbose --coverage",
        "test-watch": "jest --runInBand --watch"
      },
      "semistandard": {
        "ignore": [
          "examples/*/dist/**/*.*"
        ]
      },
      "types": "typings.d.ts",
      "version": "5.3.2"
    },
    "descriptionFileRoot": "/Users/lzm/blog/前端工程化/webpack-demo-plugin/node_modules/html-webpack-plugin",
    "relativePath": "./default_index.ejs",
    "__innerRequest_relativePath": "./default_index.ejs",
    "__innerRequest": "./default_index.ejs"
  },
  "loaders": [
    {
      "loader": "/Users/lzm/blog/前端工程化/webpack-demo-plugin/node_modules/html-webpack-plugin/lib/loader.js"
    }
  ],
  "error": null,
  "_source": {
    "_valueIsBuffer": false,
    "_value": "var _ = __non_webpack_require__(\"/Users/lzm/blog/前端工程化/webpack-demo-plugin/node_modules/lodash/lodash.js\");module.exports = function (templateParams) { with(templateParams) {return (function(data) {\nvar __t, __p = '';\n__p += '<!DOCTYPE html>\\n<html>\\n  <head>\\n    <meta charset=\"utf-8\">\\n    <title>' +\n((__t = ( htmlWebpackPlugin.options.title )) == null ? '' : __t) +\n'</title>\\n  </head>\\n  <body>\\n  </body>\\n</html>';\nreturn __p\n})();}}",
    "_valueAsBuffer": {
      "type": "Buffer",
      "data": [
        118,
        97,
        114,
        32,
        95,
        32,
        61,
        32,
        95,
        95,
        110,
        111,
        110,
        95,
        119,
        101,
        98,
        112,
        97,
        99,
        107,
        95,
        114,
        101,
        113,
        117,
        105,
        114,
        101,
        95,
        95,
        40,
        34,
        47,
        85,
        115,
        101,
        114,
        115,
        47,
        108,
        122,
        109,
        47,
        98,
        108,
        111,
        103,
        47,
        229,
        137,
        141,
        231,
        171,
        175,
        229,
        183,
        165,
        231,
        168,
        139,
        229,
        140,
        150,
        47,
        119,
        101,
        98,
        112,
        97,
        99,
        107,
        45,
        100,
        101,
        109,
        111,
        45,
        112,
        108,
        117,
        103,
        105,
        110,
        47,
        110,
        111,
        100,
        101,
        95,
        109,
        111,
        100,
        117,
        108,
        101,
        115,
        47,
        108,
        111,
        100,
        97,
        115,
        104,
        47,
        108,
        111,
        100,
        97,
        115,
        104,
        46,
        106,
        115,
        34,
        41,
        59,
        109,
        111,
        100,
        117,
        108,
        101,
        46,
        101,
        120,
        112,
        111,
        114,
        116,
        115,
        32,
        61,
        32,
        102,
        117,
        110,
        99,
        116,
        105,
        111,
        110,
        32,
        40,
        116,
        101,
        109,
        112,
        108,
        97,
        116,
        101,
        80,
        97,
        114,
        97,
        109,
        115,
        41,
        32,
        123,
        32,
        119,
        105,
        116,
        104,
        40,
        116,
        101,
        109,
        112,
        108,
        97,
        116,
        101,
        80,
        97,
        114,
        97,
        109,
        115,
        41,
        32,
        123,
        114,
        101,
        116,
        117,
        114,
        110,
        32,
        40,
        102,
        117,
        110,
        99,
        116,
        105,
        111,
        110,
        40,
        100,
        97,
        116,
        97,
        41,
        32,
        123,
        10,
        118,
        97,
        114,
        32,
        95,
        95,
        116,
        44,
        32,
        95,
        95,
        112,
        32,
        61,
        32,
        39,
        39,
        59,
        10,
        95,
        95,
        112,
        32,
        43,
        61,
        32,
        39,
        60,
        33,
        68,
        79,
        67,
        84,
        89,
        80,
        69,
        32,
        104,
        116,
        109,
        108,
        62,
        92,
        110,
        60,
        104,
        116,
        109,
        108,
        62,
        92,
        110,
        32,
        32,
        60,
        104,
        101,
        97,
        100,
        62,
        92,
        110,
        32,
        32,
        32,
        32,
        60,
        109,
        101,
        116,
        97,
        32,
        99,
        104,
        97,
        114,
        115,
        101,
        116,
        61,
        34,
        117,
        116,
        102,
        45,
        56,
        34,
        62,
        92,
        110,
        32,
        32,
        32,
        32,
        60,
        116,
        105,
        116,
        108,
        101,
        62,
        39,
        32,
        43,
        10,
        40,
        40,
        95,
        95,
        116,
        32,
        61,
        32,
        40,
        32,
        104,
        116,
        109,
        108,
        87,
        101,
        98,
        112,
        97,
        99,
        107,
        80,
        108,
        117,
        103,
        105,
        110,
        46,
        111,
        112,
        116,
        105,
        111,
        110,
        115,
        46,
        116,
        105,
        116,
        108,
        101,
        32,
        41,
        41,
        32,
        61,
        61,
        32,
        110,
        117,
        108,
        108,
        32,
        63,
        32,
        39,
        39,
        32,
        58,
        32,
        95,
        95,
        116,
        41,
        32,
        43,
        10,
        39,
        60,
        47,
        116,
        105,
        116,
        108,
        101,
        62,
        92,
        110,
        32,
        32,
        60,
        47,
        104,
        101,
        97,
        100,
        62,
        92,
        110,
        32,
        32,
        60,
        98,
        111,
        100,
        121,
        62,
        92,
        110,
        32,
        32,
        60,
        47,
        98,
        111,
        100,
        121,
        62,
        92,
        110,
        60,
        47,
        104,
        116,
        109,
        108,
        62,
        39,
        59,
        10,
        114,
        101,
        116,
        117,
        114,
        110,
        32,
        95,
        95,
        112,
        10,
        125,
        41,
        40,
        41,
        59,
        125,
        125
      ]
    }
  },
  "_lastSuccessfulBuildMeta": {},
  "_forceBuild": false,
  "_isEvaluatingSideEffects": false,
  "_ast": null
}